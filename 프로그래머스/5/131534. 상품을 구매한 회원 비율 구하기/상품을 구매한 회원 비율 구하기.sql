SELECT YEAR(S.SALES_DATE) AS YEAR, MONTH(S.SALES_DATE) AS MONTH, COUNT(DISTINCT S.USER_ID) AS PURCHASED_USERS,
-- 1.0 곱하는 이유 : 정수 나눗셈 방지, 자동 실수 변환으로 정확한 비율 계산
    ROUND(COUNT(DISTINCT S.USER_ID) * 1.0 / 
         (SELECT COUNT(*) FROM USER_INFO WHERE JOINED BETWEEN '2021-01-01' AND '2021-12-31'), 1) AS PURCHASED_RATIO
FROM USER_INFO I
JOIN ONLINE_SALE S ON I.USER_ID = S.USER_ID
-- LIKE보다 범위 조건이 명확하고 빠름
WHERE I.JOINED BETWEEN '2021-01-01' AND '2021-12-31'
-- 좀 더 정확하고 명확한 그룹핑
GROUP BY YEAR(S.SALES_DATE), MONTH(S.SALES_DATE)
ORDER BY YEAR, MONTH;


/* 내가 작성한 버전
SELECT YEAR(S.SALES_DATE) AS YEAR, MONTH(S.SALES_DATE) AS MONTH, COUNT(DISTINCT S.USER_ID) AS PURCHASED_USERS,
       ROUND(COUNT(DISTINCT S.USER_ID) / (SELECT COUNT(USER_ID) FROM USER_INFO WHERE JOINED LIKE '2021%'), 1) AS PUCHASED_RATIO
FROM USER_INFO I JOIN ONLINE_SALE S ON I.USER_ID = S.USER_ID
WHERE I.JOINED LIKE '2021%'
GROUP BY MONTH(S.SALES_DATE)
ORDER BY 1, 2;
*/
